/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form.knjiga;

import controller.ClientController;
import domain.Autor;
import domain.Knjiga;
import domain.Zanr;
import form.FrmMain;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Aleksandra
 */
public class FrmUpdateKnjiga extends javax.swing.JDialog {
     Knjiga knjiga;
    /**
     * Creates new form FrmUpdateKnjiga
     */
    public FrmUpdateKnjiga(java.awt.Frame parent, boolean modal, Knjiga knjiga) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Izmeni knjigu");
        this.knjiga=knjiga;
        prepareView();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnIzmeni = new javax.swing.JButton();
        cmbZanr = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbAutor = new javax.swing.JComboBox();
        txtKolicina = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        cmbZanr.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Å½anr:");

        jLabel2.setText("Autor:");

        txtKolicina.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel4.setText("Kolicina:");

        jLabel1.setText("Naziv:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cmbZanr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbAutor, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .addComponent(txtKolicina))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIzmeni)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbZanr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIzmeni)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        try {
            
            if(txtNaziv.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Sistem ne moze da kreira novu knjigu", "Error",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(Integer.parseInt(txtKolicina.getText())<0){
                JOptionPane.showMessageDialog(this,"Sistem ne moze da kreira novu knjigu", "Error",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            Knjiga k=new Knjiga(knjiga.getKnjigaID(), txtNaziv.getText(), Integer.parseInt(txtKolicina.getText()),
                (Zanr) cmbZanr.getSelectedItem(), (Autor) cmbAutor.getSelectedItem());
            
            if(k.getKnjigaID().equals(knjiga.getKnjigaID()) && k.getKolicina()==knjiga.getKolicina() &&
                    k.getZanr().equals(k.getZanr()) 
                    && k.getAutor().getAutorID().equals(knjiga.getAutor().getAutorID())){
                JOptionPane.showMessageDialog(this,"Izmena nije izvrsena.");
                this.dispose();
                return;
            }
            
            ClientController.getInstance().updateKnjiga(k);
            JOptionPane.showMessageDialog(this,"Sistem je izmenio knjigu");
            
            FrmMain main = (FrmMain) getParent();
	    main.refreshTableKnjiga();

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this,"Sistem ne moze izmeni knjigu", "Error",
                JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmAddKnjiga.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"Sistem ne moze izmeni knjigu", "Error",
                JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmAddKnjiga.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void prepareView() {
        txtNaziv.setText(knjiga.getNaziv());
        txtKolicina.setText(String.valueOf(knjiga.getKolicina()));
        cmbZanr.removeAllItems();
        for (Zanr zanr : Zanr.values()) {
            cmbZanr.addItem(zanr);
        }
        try {
            List<Autor> listaAutora=ClientController.getInstance().getAllAutor();
            cmbAutor.removeAllItems();
            for (Autor autor : listaAutora) {
                cmbAutor.addItem(autor);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmAddKnjiga.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(knjiga.getAutor().getAutorID());
        cmbAutor.setSelectedItem(knjiga.getAutor());
        cmbZanr.setSelectedItem(knjiga.getZanr());
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JComboBox cmbAutor;
    private javax.swing.JComboBox cmbZanr;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JFormattedTextField txtKolicina;
    private javax.swing.JTextField txtNaziv;
    // End of variables declaration//GEN-END:variables
}
